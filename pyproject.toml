[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
version = "0.0.2"
name = "Agents-eval"
description = "Assess the effectiveness of agentic AI systems across various use cases focusing on agnostic metrics that measure core agentic capabilities."
authors = [
    {name = "qte77", email = "qte@77.gh"}
]
readme = "README.md"
requires-python = ">=3.12"
license = "bsd-3-clause"
dependencies = [
    "agentops>=0.3.26",
    "logfire>=0.8.0",
    "pydantic>=2.10.6",
    # "pydantic-ai>=0.0.36",
    "pydantic-ai-slim[duckduckgo,openai,tavily]>=0.0.36",
    "pydantic-settings>=2.8.1",
    "python-dotenv>=1.0.0",
    "rich>=13.9.4",
    "scalene>=1.5.51",
    "typer>=0.15.2",
    "weave>=0.51.36",
]

# [project.urls]
# Documentation = ""

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "ruff>=0.1.0",
]
gui = [
    "streamlit>=1.43.1",
]
test = [
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=0.25.3",
    "pytest-bdd>=8.1.0",
    "requests>=2.32.3",
    "ruff>=0.9.2",
]

[tool.uv]
package = true
exclude-newer = "2025-03-13T00:00:00Z"

[tool.hatch.build.targets.wheel]
only-include = ["/README.md"]

[tool.hatch.build.targets.sdist]
include = ["/README.md", "/Makefile", "/tests"]

[tool.logfire]
ignore_no_config=true
send_to_logfire="if-token-present"

[tool.ruff]
target-version = "py312"
src = ["src", "tests"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
ignore = ["E203"]  # Whitespace before ':'
unfixable = ["B"]

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.coverage.run]
include = [
    "tests/**/*.py",
]
# omit = []
# branch = true

[tool.bumpversion]
current_version = "0.0.2"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
commit = true
tag = true
allow_dirty = false
ignore_missing_version = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "README.md"
search = "![Version](https://img.shields.io/badge/version-{current_version}-8A2BE2)"
replace = "![Version](https://img.shields.io/badge/version-{new_version}-8A2BE2)"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = """
## [Unreleased]
"""
replace = """
## [Unreleased]

---

## [{new_version}] - {now:%Y-%m-%d}
"""
